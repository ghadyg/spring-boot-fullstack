name: CD - Deploy Frontend


on:
  workflow_dispatch:
  push:
    paths:
      - Frontend/react/**
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Frontend/react
    steps:
      - name: cloning repos
        uses: actions/checkout@v4
      - name: generate build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: docker build and push
        run: |
          chmod +x ../../.ci/build-publish.sh
          USERNAME=ghady22 \
          REPO=demo-react \
          TAG=${{ steps.build-number.outputs.BUILD_NUMBER }} \
          ../../.ci/build-publish.sh . \
            --build-arg api_base_url=http://customer-webapi-env.eba-eikvqpvq.eu-central-1.elasticbeanstalk.com:8080
      - name: Update Dockerrun.aws.json react image tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat ../Dockerrun.aws.json
          sed -i -E 's_(ghady22/demo-react:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' ../../Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat ../../Dockerrun.aws.json
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIROMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{github.SHA}}
          region: ${{ secrets.EB_ENVIROMENT_REGION }}
          deployment_package: Dockerrun.aws.json
          wait_for_environment_recovery: 120
      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ../../Dockerrun.aws.json
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
          git push