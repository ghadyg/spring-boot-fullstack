name: CD - Build Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ghady
          POSTGRES_PASSWORD: password
          POSTGRES_DB: customer
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5332:5432
    defaults:
      run:
        working-directory:  ./backend
    steps:
      - uses: actions/checkout@v4
      - name: Slack commit message and sha
        run: >
          curl -X POST -H 'Content-type: application/json' --data '{"text":"https://github.com/ghadyg/spring-boot-fullstack/commit/${{ github.sha }} - ${{ github.event.head_commit.message }}"}' ${{ secrets.SLACK_URL }}
      - name: Slack Message to setup java
        run: >
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Setting up JAVA Env"}' ${{ secrets.SLACK_URL }}
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - name: Set build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Build Package Push with mvn
        run: mvn -ntp -B verify -Ddocker.image.tag=${{ steps.build-number.outputs.BUILD_NUMBER }} jib:build
      - name: Slack Message to Check mvn verification
        run: >
          curl -X POST -H 'Content-type: application/json' --data '{"text":"New Image uploaded to docker"}' ${{ secrets.SLACK_URL }}
      - name: Update Dockerrun.aws.json api image tag with new build number
        run:  |
          echo "Dockerrun.aws.json before updating tag"
          cat Dockerrun.aws.json
          sed -i -E 's_(ghady22/demo:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat Dockerrun.aws.json
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIROMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{github.SHA}}
          region: ${{ secrets.EB_ENVIROMENT_REGION }}
          deployment_package: backend/Dockerrun.aws.json
      - name: Slack Message to aws upload
        run: >
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Successfully uploaded to AWS"}' ${{ secrets.SLACK_URL }}
      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }}"
          git push